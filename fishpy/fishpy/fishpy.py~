#!/usr/bin/python3
"""Main module that drives the analysis"""

import numpy as np
import matplotlib.pyplot as plt
import ini_driver as ini
import CAMB_wrap as cw
import fisher as fi

if __name__ == "__main__":
    setup, list_experiments_included  = ini.parser('../input/test_in.ini')
    ### GET NOISE POWER SPECTRA FOR EVERY EXPERIMENT ###
    for experiment in list_experiments_included:
        if experiment.update:
            experiment.get_noise()
            experiment.max_min()
            experiment.write_noise_file(setup.noise_root)
            #experiment.plot()
            #experiment.plot(experiment.freqs)
        else:
            experiment.read_noise_file(setup.noise_root)
            #experiment.plot()
            #experiment.plot(experiment.freqs)
            
    ### COMBINE EXPERIMENT ON OVERLAPPING SKY AREAS ###
    fskycurrent = 0.
    list_combined_experiments = [] 
    while len(list_experiments_included) != 0:
        fsky = min([expe.fsky - fskycurrent for expe in list_experiments_included])
        combined_experiment = ini.CombinedExperiment(list_experiments_included,fsky)
        #combined_experiment.plot()
        list_combined_experiments.append(combined_experiment)
        for experiment in list_experiments_included:
            if experiment.fsky - fskycurrent == fsky:
                list_experiments_included.remove(experiment)
        fskycurrent = fsky
    for expe in list_combined_experiments:
        np.savetxt(expe.name + 'TT',expe.NlTT)
        
    ### RUN CAMB FOR EACH COMBINED EXPERIMENT ###
    setup.get_list_experiments(list_combined_experiments)
    setup.get_fiducial(fid_file = '/home/bb510/Code/fishpy/input/fiducial.txt')
    cw.init_file(setup)
    fisher_list = []
    for experiment in list_combined_experiments : # loop on every combined experiments
        #cw.parameter_files(setup, experiment)      
        #cw.compile_CAMB(experiment)
        #cw.run_CAMB(experiment)
        fisher = fi.FisherMatrix(setup.param_list,experiment)
        fisher.get_fisher(setup)
        fisher.write_to_txt('/home/bb510/Code/Rayleigh/fisher_matrices/tests')
        fisher_list.append(fisher)    
    list_plot = [fisher_list[0] + fisher_list[1], fisher_list[1]]
    
    setup, list_experiments_included  = ini.parser('../input/test_in_rayleigh.ini')
    ### GET NOISE POWER SPECTRA FOR EVERY EXPERIMENT ###
    for experiment in list_experiments_included:
        if experiment.update:
            experiment.get_noise()
            experiment.max_min()
            experiment.write_noise_file(setup.noise_root)
            #experiment.plot()
            #experiment.plot(experiment.freqs)
        else:
            experiment.read_noise_file(setup.noise_root)
            #experiment.plot()
            #experiment.plot(experiment.freqs)
            
    ### COMBINE EXPERIMENT ON OVERLAPPING SKY AREAS ###
    fskycurrent = 0.
    list_combined_experiments = [] 
    while len(list_experiments_included) != 0:
        fsky = min([expe.fsky - fskycurrent for expe in list_experiments_included])
        combined_experiment = ini.CombinedExperiment(list_experiments_included,fsky)
        #combined_experiment.plot()
        list_combined_experiments.append(combined_experiment)
        for experiment in list_experiments_included:
            if experiment.fsky - fskycurrent == fsky:
                list_experiments_included.remove(experiment)
        fskycurrent = fsky
    for expe in list_combined_experiments:
        np.savetxt(expe.name + 'TT',expe.NlTT)
        
    ### RUN CAMB FOR EACH COMBINED EXPERIMENT ###
    setup.get_list_experiments(list_combined_experiments)
    setup.get_fiducial(fid_file = '/home/bb510/Code/fishpy/input/fiducial.txt')
    cw.init_file(setup)
    fisher_list = []
    for experiment in list_combined_experiments : # loop on every combined experiments
        #cw.parameter_files(setup, experiment)      
        #cw.compile_CAMB(experiment)
        #cw.run_CAMB(experiment)
        fisher = fi.FisherMatrix(setup.param_list,experiment)
        fisher.get_fisher(setup)
        fisher.write_to_txt('/home/bb510/Code/Rayleigh/fisher_matrices/tests')
        fisher_list.append(fisher)    
    list_plot.insert(0,fisher_list[0] + fisher_list[1])
    
    print(fi.print_errors(list_plot))
    fi.plot_triangular(setup,list_plot,['N_eff','n_s','theta_MC','ombh2'])




        

    
    
    
            



